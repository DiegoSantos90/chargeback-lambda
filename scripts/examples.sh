#!/bin/bash

# Exemplos Pr√°ticos de Testes da Lambda
# Execute este arquivo para ver exemplos de uso

echo "üß™ Exemplos de Testes Locais - Chargeback Lambda"
echo "=================================================="
echo ""

# Cores
GREEN='\033[0;32m'
YELLOW='\033[1;33m'
BLUE='\033[0;34m'
NC='\033[0m'

echo -e "${YELLOW}1. INICIAR AMBIENTE COMPLETO${NC}"
echo "   ./scripts/start-local-env.sh"
echo "   # ou"
echo "   make test-lambda-local"
echo ""

echo -e "${YELLOW}2. HEALTH CHECK${NC}"
echo "   curl http://localhost:3000/health"
echo ""

echo -e "${YELLOW}3. CRIAR CHARGEBACK - FRAUD${NC}"
echo "   curl -X POST http://localhost:3000/chargebacks \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{"
echo "       \"transaction_id\": \"TXN-2025-001\","
echo "       \"merchant_id\": \"MERCH-STORE-01\","
echo "       \"amount\": 150.50,"
echo "       \"currency\": \"USD\","
echo "       \"card_number\": \"****1234\","
echo "       \"reason\": \"fraud\","
echo "       \"description\": \"Unauthorized transaction detected\","
echo "       \"transaction_date\": \"2025-01-15T10:30:00Z\""
echo "     }' | jq ."
echo ""

echo -e "${YELLOW}4. CRIAR CHARGEBACK - CONSUMER DISPUTE${NC}"
echo "   curl -X POST http://localhost:3000/chargebacks \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{"
echo "       \"transaction_id\": \"TXN-2025-002\","
echo "       \"merchant_id\": \"MERCH-STORE-02\","
echo "       \"amount\": 299.99,"
echo "       \"currency\": \"BRL\","
echo "       \"card_number\": \"****5678\","
echo "       \"reason\": \"consumer_dispute\","
echo "       \"description\": \"Product not as described\","
echo "       \"transaction_date\": \"2025-01-20T15:45:00Z\""
echo "     }' | jq ."
echo ""

echo -e "${YELLOW}5. CRIAR CHARGEBACK - AUTHORIZATION ERROR${NC}"
echo "   curl -X POST http://localhost:3000/chargebacks \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{"
echo "       \"transaction_id\": \"TXN-2025-003\","
echo "       \"merchant_id\": \"MERCH-STORE-03\","
echo "       \"amount\": 89.90,"
echo "       \"currency\": \"EUR\","
echo "       \"card_number\": \"****9012\","
echo "       \"reason\": \"authorization_error\","
echo "       \"description\": \"Duplicate authorization\","
echo "       \"transaction_date\": \"2025-01-25T09:15:00Z\""
echo "     }' | jq ."
echo ""

echo -e "${YELLOW}6. CRIAR CHARGEBACK - PROCESSING ERROR${NC}"
echo "   curl -X POST http://localhost:3000/chargebacks \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{"
echo "       \"transaction_id\": \"TXN-2025-004\","
echo "       \"merchant_id\": \"MERCH-STORE-04\","
echo "       \"amount\": 500.00,"
echo "       \"currency\": \"USD\","
echo "       \"card_number\": \"****3456\","
echo "       \"reason\": \"processing_error\","
echo "       \"description\": \"Incorrect amount charged\","
echo "       \"transaction_date\": \"2025-01-30T14:20:00Z\""
echo "     }' | jq ."
echo ""

echo -e "${YELLOW}7. VERIFICAR DADOS NO DYNAMODB${NC}"
echo "   make dynamodb-scan"
echo "   # ou"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb scan \\"
echo "     --table-name chargebacks-lambda \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 | jq ."
echo ""

echo -e "${YELLOW}8. CONTAR REGISTROS${NC}"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb scan \\"
echo "     --table-name chargebacks-lambda \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 \\"
echo "     --select COUNT | jq '.Count'"
echo ""

echo -e "${YELLOW}9. QUERY POR TRANSACTION ID (usando GSI)${NC}"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb query \\"
echo "     --table-name chargebacks-lambda \\"
echo "     --index-name transaction-id-index \\"
echo "     --key-condition-expression 'transaction_id = :tid' \\"
echo "     --expression-attribute-values '{\":tid\":{\"S\":\"TXN-2025-001\"}}' \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 | jq '.Items'"
echo ""

echo -e "${YELLOW}10. QUERY POR MERCHANT ID (usando GSI)${NC}"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb query \\"
echo "     --table-name chargebacks-lambda \\"
echo "     --index-name merchant-id-index \\"
echo "     --key-condition-expression 'merchant_id = :mid' \\"
echo "     --expression-attribute-values '{\":mid\":{\"S\":\"MERCH-STORE-01\"}}' \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 | jq '.Items'"
echo ""

echo -e "${YELLOW}11. QUERY POR STATUS (usando GSI)${NC}"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb query \\"
echo "     --table-name chargebacks-lambda \\"
echo "     --index-name status-index \\"
echo "     --key-condition-expression 'status = :st' \\"
echo "     --expression-attribute-values '{\":st\":{\"S\":\"pending\"}}' \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 | jq '.Items'"
echo ""

echo -e "${YELLOW}12. LOGS DO SAM${NC}"
echo "   tail -f /tmp/sam.log"
echo "   # ou apenas erros"
echo "   tail -f /tmp/sam.log | grep ERROR"
echo ""

echo -e "${YELLOW}13. PARAR SAM${NC}"
echo "   make stop-sam"
echo "   # ou"
echo "   pkill -f 'sam local start-api'"
echo ""

echo -e "${YELLOW}14. LIMPAR TABELA${NC}"
echo "   # Deletar todos os registros (cuidado!)"
echo "   AWS_ACCESS_KEY_ID=dummy AWS_SECRET_ACCESS_KEY=dummy \\"
echo "   aws dynamodb scan --table-name chargebacks-lambda \\"
echo "     --endpoint-url http://localhost:8000 \\"
echo "     --region us-east-1 \\"
echo "     --attributes-to-get id \\"
echo "     --output json | jq -r '.Items[].id.S' | \\"
echo "   while read id; do"
echo "     aws dynamodb delete-item \\"
echo "       --table-name chargebacks-lambda \\"
echo "       --key '{\"id\":{\"S\":\"'\"$id\"'\"}}' \\"
echo "       --endpoint-url http://localhost:8000 \\"
echo "       --region us-east-1"
echo "   done"
echo ""

echo -e "${YELLOW}15. TESTE DE VALIDA√á√ÉO (payload inv√°lido)${NC}"
echo "   # Faltando campos obrigat√≥rios"
echo "   curl -X POST http://localhost:3000/chargebacks \\"
echo "     -H 'Content-Type: application/json' \\"
echo "     -d '{"
echo "       \"transaction_id\": \"TXN-INVALID\","
echo "       \"amount\": 100"
echo "     }' | jq ."
echo ""
echo "   # Deve retornar erro 400 com mensagem de valida√ß√£o"
echo ""

echo -e "${GREEN}=================================================="
echo "Para executar os comandos, copie e cole no terminal!"
echo "==================================================${NC}"
